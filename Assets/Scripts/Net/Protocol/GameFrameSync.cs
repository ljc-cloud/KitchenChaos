// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameFrameSync.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameFrameSync {

  /// <summary>Holder for reflection information generated from GameFrameSync.proto</summary>
  public static partial class GameFrameSyncReflection {

    #region Descriptor
    /// <summary>File descriptor for GameFrameSync.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameFrameSyncReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNHYW1lRnJhbWVTeW5jLnByb3RvEg1HYW1lRnJhbWVTeW5jIrsCChFSZXFG",
            "cmFtZUlucHV0RGF0YRIPCgdmcmFtZUlkGAEgASgFEhAKCHBsYXllcklkGAIg",
            "ASgFEisKCWlucHV0VHlwZRgDIAEoDjIYLkdhbWVGcmFtZVN5bmMuSW5wdXRU",
            "eXBlEikKCHBvc2l0aW9uGAQgASgLMhcuR2FtZUZyYW1lU3luYy5WZWN0b3Iy",
            "RBINCgVmb3JjZRgFIAEoAhIWCg5hcnJvd1JvdGF0aW9uWhgGIAEoAhIvCg5z",
            "aG9vdERpcmVjdGlvbhgHIAEoCzIXLkdhbWVGcmFtZVN5bmMuVmVjdG9yMkQS",
            "KwoKbW92ZVZlY3RvchgIIAEoCzIXLkdhbWVGcmFtZVN5bmMuVmVjdG9yMkQS",
            "DQoFaW5kZXgYCSABKAUSFwoPaW50ZXJhY3RDb3VudGVyGAogASgFIrgCCg5G",
            "cmFtZUlucHV0RGF0YRIPCgdmcmFtZUlkGAEgASgFEhAKCHBsYXllcklkGAIg",
            "ASgFEisKCWlucHV0VHlwZRgDIAEoDjIYLkdhbWVGcmFtZVN5bmMuSW5wdXRU",
            "eXBlEikKCHBvc2l0aW9uGAQgASgLMhcuR2FtZUZyYW1lU3luYy5WZWN0b3Iy",
            "RBINCgVmb3JjZRgFIAEoAhIWCg5hcnJvd1JvdGF0aW9uWhgGIAEoAhIvCg5z",
            "aG9vdERpcmVjdGlvbhgHIAEoCzIXLkdhbWVGcmFtZVN5bmMuVmVjdG9yMkQS",
            "KwoKbW92ZVZlY3RvchgIIAEoCzIXLkdhbWVGcmFtZVN5bmMuVmVjdG9yMkQS",
            "DQoFaW5kZXgYCSABKAUSFwoPaW50ZXJhY3RDb3VudGVyGAogASgFIikKC01l",
            "c3NhZ2VIZWFkEg0KBWluZGV4GAEgASgFEgsKA2FjaxgCIAEoCCIrCghWZWN0",
            "b3IzRBIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAiIgCghWZWN0",
            "b3IyRBIJCgF4GAEgASgCEgkKAXkYAiABKAIikgIKEFJlc0ZyYW1lU3luY0Rh",
            "dGESDwoHZnJhbWVJZBgBIAEoBRI8ChVwbGF5ZXJzRnJhbWVJbnB1dERhdGEY",
            "AiADKAsyHS5HYW1lRnJhbWVTeW5jLkZyYW1lSW5wdXREYXRhEjsKEXJlcUZy",
            "YW1lSW5wdXREYXRhGAMgASgLMiAuR2FtZUZyYW1lU3luYy5SZXFGcmFtZUlu",
            "cHV0RGF0YRIvCgttZXNzYWdlSGVhZBgFIAEoCzIaLkdhbWVGcmFtZVN5bmMu",
            "TWVzc2FnZUhlYWQSLwoLbWVzc2FnZVR5cGUYBiABKA4yGi5HYW1lRnJhbWVT",
            "eW5jLk1lc3NhZ2VUeXBlEhAKCHJvb21Db2RlGAcgASgJKoABCglJbnB1dFR5",
            "cGUSCAoETm9uZRAAEgwKCE1vdmVMZWZ0EAESDQoJTW92ZVJpZ2h0EAISCQoF",
            "UmVhZHkQAxINCglRdWl0UmVhZHkQBBIJCgVTaG9vdBAFEggKBE1vdmUQBhIM",
            "CghJbnRlcmFjdBAHEg8KC0ludGVyYWN0QWx0EAgqJQoLTWVzc2FnZVR5cGUS",
            "DQoJRnJhbWVTeW5jEAASBwoDQUNLEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameFrameSync.InputType), typeof(global::GameFrameSync.MessageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.ReqFrameInputData), global::GameFrameSync.ReqFrameInputData.Parser, new[]{ "FrameId", "PlayerId", "InputType", "Position", "Force", "ArrowRotationZ", "ShootDirection", "MoveVector", "Index", "InteractCounter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.FrameInputData), global::GameFrameSync.FrameInputData.Parser, new[]{ "FrameId", "PlayerId", "InputType", "Position", "Force", "ArrowRotationZ", "ShootDirection", "MoveVector", "Index", "InteractCounter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.MessageHead), global::GameFrameSync.MessageHead.Parser, new[]{ "Index", "Ack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.Vector3D), global::GameFrameSync.Vector3D.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.Vector2D), global::GameFrameSync.Vector2D.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameFrameSync.ResFrameSyncData), global::GameFrameSync.ResFrameSyncData.Parser, new[]{ "FrameId", "PlayersFrameInputData", "ReqFrameInputData", "MessageHead", "MessageType", "RoomCode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum InputType {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("MoveLeft")] MoveLeft = 1,
    [pbr::OriginalName("MoveRight")] MoveRight = 2,
    [pbr::OriginalName("Ready")] Ready = 3,
    [pbr::OriginalName("QuitReady")] QuitReady = 4,
    [pbr::OriginalName("Shoot")] Shoot = 5,
    [pbr::OriginalName("Move")] Move = 6,
    [pbr::OriginalName("Interact")] Interact = 7,
    [pbr::OriginalName("InteractAlt")] InteractAlt = 8,
  }

  public enum MessageType {
    [pbr::OriginalName("FrameSync")] FrameSync = 0,
    [pbr::OriginalName("ACK")] Ack = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReqFrameInputData : pb::IMessage<ReqFrameInputData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqFrameInputData> _parser = new pb::MessageParser<ReqFrameInputData>(() => new ReqFrameInputData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReqFrameInputData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqFrameInputData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqFrameInputData(ReqFrameInputData other) : this() {
      frameId_ = other.frameId_;
      playerId_ = other.playerId_;
      inputType_ = other.inputType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      force_ = other.force_;
      arrowRotationZ_ = other.arrowRotationZ_;
      shootDirection_ = other.shootDirection_ != null ? other.shootDirection_.Clone() : null;
      moveVector_ = other.moveVector_ != null ? other.moveVector_.Clone() : null;
      index_ = other.index_;
      interactCounter_ = other.interactCounter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqFrameInputData Clone() {
      return new ReqFrameInputData(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "inputType" field.</summary>
    public const int InputTypeFieldNumber = 3;
    private global::GameFrameSync.InputType inputType_ = global::GameFrameSync.InputType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.InputType InputType {
      get { return inputType_; }
      set {
        inputType_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::GameFrameSync.Vector2D position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 5;
    private float force_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    /// <summary>Field number for the "arrowRotationZ" field.</summary>
    public const int ArrowRotationZFieldNumber = 6;
    private float arrowRotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ArrowRotationZ {
      get { return arrowRotationZ_; }
      set {
        arrowRotationZ_ = value;
      }
    }

    /// <summary>Field number for the "shootDirection" field.</summary>
    public const int ShootDirectionFieldNumber = 7;
    private global::GameFrameSync.Vector2D shootDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D ShootDirection {
      get { return shootDirection_; }
      set {
        shootDirection_ = value;
      }
    }

    /// <summary>Field number for the "moveVector" field.</summary>
    public const int MoveVectorFieldNumber = 8;
    private global::GameFrameSync.Vector2D moveVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D MoveVector {
      get { return moveVector_; }
      set {
        moveVector_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 9;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "interactCounter" field.</summary>
    public const int InteractCounterFieldNumber = 10;
    private int interactCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InteractCounter {
      get { return interactCounter_; }
      set {
        interactCounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReqFrameInputData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReqFrameInputData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (InputType != other.InputType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Force, other.Force)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ArrowRotationZ, other.ArrowRotationZ)) return false;
      if (!object.Equals(ShootDirection, other.ShootDirection)) return false;
      if (!object.Equals(MoveVector, other.MoveVector)) return false;
      if (Index != other.Index) return false;
      if (InteractCounter != other.InteractCounter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (InputType != global::GameFrameSync.InputType.None) hash ^= InputType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Force != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Force);
      if (ArrowRotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ArrowRotationZ);
      if (shootDirection_ != null) hash ^= ShootDirection.GetHashCode();
      if (moveVector_ != null) hash ^= MoveVector.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (InteractCounter != 0) hash ^= InteractCounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InputType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (Force != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Force);
      }
      if (ArrowRotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ArrowRotationZ);
      }
      if (shootDirection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ShootDirection);
      }
      if (moveVector_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MoveVector);
      }
      if (Index != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Index);
      }
      if (InteractCounter != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InteractCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InputType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (Force != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Force);
      }
      if (ArrowRotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ArrowRotationZ);
      }
      if (shootDirection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ShootDirection);
      }
      if (moveVector_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MoveVector);
      }
      if (Index != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Index);
      }
      if (InteractCounter != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InteractCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Force != 0F) {
        size += 1 + 4;
      }
      if (ArrowRotationZ != 0F) {
        size += 1 + 4;
      }
      if (shootDirection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShootDirection);
      }
      if (moveVector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveVector);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (InteractCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InteractCounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReqFrameInputData other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.InputType != global::GameFrameSync.InputType.None) {
        InputType = other.InputType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameFrameSync.Vector2D();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Force != 0F) {
        Force = other.Force;
      }
      if (other.ArrowRotationZ != 0F) {
        ArrowRotationZ = other.ArrowRotationZ;
      }
      if (other.shootDirection_ != null) {
        if (shootDirection_ == null) {
          ShootDirection = new global::GameFrameSync.Vector2D();
        }
        ShootDirection.MergeFrom(other.ShootDirection);
      }
      if (other.moveVector_ != null) {
        if (moveVector_ == null) {
          MoveVector = new global::GameFrameSync.Vector2D();
        }
        MoveVector.MergeFrom(other.MoveVector);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.InteractCounter != 0) {
        InteractCounter = other.InteractCounter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            InputType = (global::GameFrameSync.InputType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(Position);
            break;
          }
          case 45: {
            Force = input.ReadFloat();
            break;
          }
          case 53: {
            ArrowRotationZ = input.ReadFloat();
            break;
          }
          case 58: {
            if (shootDirection_ == null) {
              ShootDirection = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(ShootDirection);
            break;
          }
          case 66: {
            if (moveVector_ == null) {
              MoveVector = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(MoveVector);
            break;
          }
          case 72: {
            Index = input.ReadInt32();
            break;
          }
          case 80: {
            InteractCounter = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            InputType = (global::GameFrameSync.InputType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(Position);
            break;
          }
          case 45: {
            Force = input.ReadFloat();
            break;
          }
          case 53: {
            ArrowRotationZ = input.ReadFloat();
            break;
          }
          case 58: {
            if (shootDirection_ == null) {
              ShootDirection = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(ShootDirection);
            break;
          }
          case 66: {
            if (moveVector_ == null) {
              MoveVector = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(MoveVector);
            break;
          }
          case 72: {
            Index = input.ReadInt32();
            break;
          }
          case 80: {
            InteractCounter = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FrameInputData : pb::IMessage<FrameInputData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrameInputData> _parser = new pb::MessageParser<FrameInputData>(() => new FrameInputData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FrameInputData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameInputData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameInputData(FrameInputData other) : this() {
      frameId_ = other.frameId_;
      playerId_ = other.playerId_;
      inputType_ = other.inputType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      force_ = other.force_;
      arrowRotationZ_ = other.arrowRotationZ_;
      shootDirection_ = other.shootDirection_ != null ? other.shootDirection_.Clone() : null;
      moveVector_ = other.moveVector_ != null ? other.moveVector_.Clone() : null;
      index_ = other.index_;
      interactCounter_ = other.interactCounter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameInputData Clone() {
      return new FrameInputData(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "inputType" field.</summary>
    public const int InputTypeFieldNumber = 3;
    private global::GameFrameSync.InputType inputType_ = global::GameFrameSync.InputType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.InputType InputType {
      get { return inputType_; }
      set {
        inputType_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::GameFrameSync.Vector2D position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 5;
    private float force_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    /// <summary>Field number for the "arrowRotationZ" field.</summary>
    public const int ArrowRotationZFieldNumber = 6;
    private float arrowRotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ArrowRotationZ {
      get { return arrowRotationZ_; }
      set {
        arrowRotationZ_ = value;
      }
    }

    /// <summary>Field number for the "shootDirection" field.</summary>
    public const int ShootDirectionFieldNumber = 7;
    private global::GameFrameSync.Vector2D shootDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D ShootDirection {
      get { return shootDirection_; }
      set {
        shootDirection_ = value;
      }
    }

    /// <summary>Field number for the "moveVector" field.</summary>
    public const int MoveVectorFieldNumber = 8;
    private global::GameFrameSync.Vector2D moveVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.Vector2D MoveVector {
      get { return moveVector_; }
      set {
        moveVector_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 9;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "interactCounter" field.</summary>
    public const int InteractCounterFieldNumber = 10;
    private int interactCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InteractCounter {
      get { return interactCounter_; }
      set {
        interactCounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FrameInputData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FrameInputData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (InputType != other.InputType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Force, other.Force)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ArrowRotationZ, other.ArrowRotationZ)) return false;
      if (!object.Equals(ShootDirection, other.ShootDirection)) return false;
      if (!object.Equals(MoveVector, other.MoveVector)) return false;
      if (Index != other.Index) return false;
      if (InteractCounter != other.InteractCounter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (InputType != global::GameFrameSync.InputType.None) hash ^= InputType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Force != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Force);
      if (ArrowRotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ArrowRotationZ);
      if (shootDirection_ != null) hash ^= ShootDirection.GetHashCode();
      if (moveVector_ != null) hash ^= MoveVector.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (InteractCounter != 0) hash ^= InteractCounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InputType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (Force != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Force);
      }
      if (ArrowRotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ArrowRotationZ);
      }
      if (shootDirection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ShootDirection);
      }
      if (moveVector_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MoveVector);
      }
      if (Index != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Index);
      }
      if (InteractCounter != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InteractCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InputType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (Force != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Force);
      }
      if (ArrowRotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ArrowRotationZ);
      }
      if (shootDirection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ShootDirection);
      }
      if (moveVector_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MoveVector);
      }
      if (Index != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Index);
      }
      if (InteractCounter != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InteractCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (InputType != global::GameFrameSync.InputType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Force != 0F) {
        size += 1 + 4;
      }
      if (ArrowRotationZ != 0F) {
        size += 1 + 4;
      }
      if (shootDirection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShootDirection);
      }
      if (moveVector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveVector);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (InteractCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InteractCounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FrameInputData other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.InputType != global::GameFrameSync.InputType.None) {
        InputType = other.InputType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameFrameSync.Vector2D();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Force != 0F) {
        Force = other.Force;
      }
      if (other.ArrowRotationZ != 0F) {
        ArrowRotationZ = other.ArrowRotationZ;
      }
      if (other.shootDirection_ != null) {
        if (shootDirection_ == null) {
          ShootDirection = new global::GameFrameSync.Vector2D();
        }
        ShootDirection.MergeFrom(other.ShootDirection);
      }
      if (other.moveVector_ != null) {
        if (moveVector_ == null) {
          MoveVector = new global::GameFrameSync.Vector2D();
        }
        MoveVector.MergeFrom(other.MoveVector);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.InteractCounter != 0) {
        InteractCounter = other.InteractCounter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            InputType = (global::GameFrameSync.InputType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(Position);
            break;
          }
          case 45: {
            Force = input.ReadFloat();
            break;
          }
          case 53: {
            ArrowRotationZ = input.ReadFloat();
            break;
          }
          case 58: {
            if (shootDirection_ == null) {
              ShootDirection = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(ShootDirection);
            break;
          }
          case 66: {
            if (moveVector_ == null) {
              MoveVector = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(MoveVector);
            break;
          }
          case 72: {
            Index = input.ReadInt32();
            break;
          }
          case 80: {
            InteractCounter = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            InputType = (global::GameFrameSync.InputType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(Position);
            break;
          }
          case 45: {
            Force = input.ReadFloat();
            break;
          }
          case 53: {
            ArrowRotationZ = input.ReadFloat();
            break;
          }
          case 58: {
            if (shootDirection_ == null) {
              ShootDirection = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(ShootDirection);
            break;
          }
          case 66: {
            if (moveVector_ == null) {
              MoveVector = new global::GameFrameSync.Vector2D();
            }
            input.ReadMessage(MoveVector);
            break;
          }
          case 72: {
            Index = input.ReadInt32();
            break;
          }
          case 80: {
            InteractCounter = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MessageHead : pb::IMessage<MessageHead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageHead> _parser = new pb::MessageParser<MessageHead>(() => new MessageHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MessageHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHead(MessageHead other) : this() {
      index_ = other.index_;
      ack_ = other.ack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHead Clone() {
      return new MessageHead(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 2;
    private bool ack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ack {
      get { return ack_; }
      set {
        ack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MessageHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MessageHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Ack != other.Ack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Ack != false) hash ^= Ack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Ack != false) {
        output.WriteRawTag(16);
        output.WriteBool(Ack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Ack != false) {
        output.WriteRawTag(16);
        output.WriteBool(Ack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Ack != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MessageHead other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Ack != false) {
        Ack = other.Ack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Ack = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Ack = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Vector3D : pb::IMessage<Vector3D>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector3D> _parser = new pb::MessageParser<Vector3D>(() => new Vector3D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Vector3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3D(Vector3D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3D Clone() {
      return new Vector3D(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Vector3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Vector3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Vector3D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Vector2D : pb::IMessage<Vector2D>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector2D> _parser = new pb::MessageParser<Vector2D>(() => new Vector2D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Vector2D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector2D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector2D(Vector2D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector2D Clone() {
      return new Vector2D(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Vector2D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Vector2D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Vector2D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResFrameSyncData : pb::IMessage<ResFrameSyncData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResFrameSyncData> _parser = new pb::MessageParser<ResFrameSyncData>(() => new ResFrameSyncData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResFrameSyncData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameFrameSync.GameFrameSyncReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResFrameSyncData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResFrameSyncData(ResFrameSyncData other) : this() {
      frameId_ = other.frameId_;
      playersFrameInputData_ = other.playersFrameInputData_.Clone();
      reqFrameInputData_ = other.reqFrameInputData_ != null ? other.reqFrameInputData_.Clone() : null;
      messageHead_ = other.messageHead_ != null ? other.messageHead_.Clone() : null;
      messageType_ = other.messageType_;
      roomCode_ = other.roomCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResFrameSyncData Clone() {
      return new ResFrameSyncData(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "playersFrameInputData" field.</summary>
    public const int PlayersFrameInputDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GameFrameSync.FrameInputData> _repeated_playersFrameInputData_codec
        = pb::FieldCodec.ForMessage(18, global::GameFrameSync.FrameInputData.Parser);
    private readonly pbc::RepeatedField<global::GameFrameSync.FrameInputData> playersFrameInputData_ = new pbc::RepeatedField<global::GameFrameSync.FrameInputData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GameFrameSync.FrameInputData> PlayersFrameInputData {
      get { return playersFrameInputData_; }
    }

    /// <summary>Field number for the "reqFrameInputData" field.</summary>
    public const int ReqFrameInputDataFieldNumber = 3;
    private global::GameFrameSync.ReqFrameInputData reqFrameInputData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.ReqFrameInputData ReqFrameInputData {
      get { return reqFrameInputData_; }
      set {
        reqFrameInputData_ = value;
      }
    }

    /// <summary>Field number for the "messageHead" field.</summary>
    public const int MessageHeadFieldNumber = 5;
    private global::GameFrameSync.MessageHead messageHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.MessageHead MessageHead {
      get { return messageHead_; }
      set {
        messageHead_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 6;
    private global::GameFrameSync.MessageType messageType_ = global::GameFrameSync.MessageType.FrameSync;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFrameSync.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "roomCode" field.</summary>
    public const int RoomCodeFieldNumber = 7;
    private string roomCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomCode {
      get { return roomCode_; }
      set {
        roomCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResFrameSyncData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResFrameSyncData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if(!playersFrameInputData_.Equals(other.playersFrameInputData_)) return false;
      if (!object.Equals(ReqFrameInputData, other.ReqFrameInputData)) return false;
      if (!object.Equals(MessageHead, other.MessageHead)) return false;
      if (MessageType != other.MessageType) return false;
      if (RoomCode != other.RoomCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      hash ^= playersFrameInputData_.GetHashCode();
      if (reqFrameInputData_ != null) hash ^= ReqFrameInputData.GetHashCode();
      if (messageHead_ != null) hash ^= MessageHead.GetHashCode();
      if (MessageType != global::GameFrameSync.MessageType.FrameSync) hash ^= MessageType.GetHashCode();
      if (RoomCode.Length != 0) hash ^= RoomCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      playersFrameInputData_.WriteTo(output, _repeated_playersFrameInputData_codec);
      if (reqFrameInputData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReqFrameInputData);
      }
      if (messageHead_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MessageHead);
      }
      if (MessageType != global::GameFrameSync.MessageType.FrameSync) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MessageType);
      }
      if (RoomCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RoomCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      playersFrameInputData_.WriteTo(ref output, _repeated_playersFrameInputData_codec);
      if (reqFrameInputData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReqFrameInputData);
      }
      if (messageHead_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MessageHead);
      }
      if (MessageType != global::GameFrameSync.MessageType.FrameSync) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MessageType);
      }
      if (RoomCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RoomCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      size += playersFrameInputData_.CalculateSize(_repeated_playersFrameInputData_codec);
      if (reqFrameInputData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqFrameInputData);
      }
      if (messageHead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageHead);
      }
      if (MessageType != global::GameFrameSync.MessageType.FrameSync) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (RoomCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResFrameSyncData other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      playersFrameInputData_.Add(other.playersFrameInputData_);
      if (other.reqFrameInputData_ != null) {
        if (reqFrameInputData_ == null) {
          ReqFrameInputData = new global::GameFrameSync.ReqFrameInputData();
        }
        ReqFrameInputData.MergeFrom(other.ReqFrameInputData);
      }
      if (other.messageHead_ != null) {
        if (messageHead_ == null) {
          MessageHead = new global::GameFrameSync.MessageHead();
        }
        MessageHead.MergeFrom(other.MessageHead);
      }
      if (other.MessageType != global::GameFrameSync.MessageType.FrameSync) {
        MessageType = other.MessageType;
      }
      if (other.RoomCode.Length != 0) {
        RoomCode = other.RoomCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 18: {
            playersFrameInputData_.AddEntriesFrom(input, _repeated_playersFrameInputData_codec);
            break;
          }
          case 26: {
            if (reqFrameInputData_ == null) {
              ReqFrameInputData = new global::GameFrameSync.ReqFrameInputData();
            }
            input.ReadMessage(ReqFrameInputData);
            break;
          }
          case 42: {
            if (messageHead_ == null) {
              MessageHead = new global::GameFrameSync.MessageHead();
            }
            input.ReadMessage(MessageHead);
            break;
          }
          case 48: {
            MessageType = (global::GameFrameSync.MessageType) input.ReadEnum();
            break;
          }
          case 58: {
            RoomCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 18: {
            playersFrameInputData_.AddEntriesFrom(ref input, _repeated_playersFrameInputData_codec);
            break;
          }
          case 26: {
            if (reqFrameInputData_ == null) {
              ReqFrameInputData = new global::GameFrameSync.ReqFrameInputData();
            }
            input.ReadMessage(ReqFrameInputData);
            break;
          }
          case 42: {
            if (messageHead_ == null) {
              MessageHead = new global::GameFrameSync.MessageHead();
            }
            input.ReadMessage(MessageHead);
            break;
          }
          case 48: {
            MessageType = (global::GameFrameSync.MessageType) input.ReadEnum();
            break;
          }
          case 58: {
            RoomCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
